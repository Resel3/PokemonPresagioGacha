prob = rand(100)
case prob
#############################################
# Tier 1 con un 35%
#############################################
when (0...35)
  pokes = [:BIDOOF, :GOLDEEN, :RALTS]
  result = pokes[rand(pokes.length)]
  pokeReward(PokeBattle_Pokemon.new(result, 20, $Trainer), 1)

#############################################
# Tier 2 con un 40%
#############################################
when (35...75)
  result = rand(10)
  if (5..7).include?(result)
    poke = PokeBattle_Pokemon.new(:ABRA, 20, $Trainer)
    poke.ev[PBStats::SPATK] = 236
    poke.ev[PBStats::SPDEF] = 76
    poke.ev[PBStats::SPEED] = 196
    poke.pbLearnMove(:PSYCHIC)
    poke.pbLearnMove(:DAZZLINGGLEAM)
    poke.pbLearnMove(:PROTECT)
    poke.pbLearnMove(:COUNTER)
    poke.calcStats
    pokeReward(poke, 2)
  else
    pokes = [:PICHU, :DROWZEE, :EKANS]
    result = pokes[rand(pokes.length)]
    pokeReward(PokeBattle_Pokemon.new(result, 20, $Trainer), 2)
  end

#############################################
# Tier 3 con un 15%
#############################################
when (75...90)
  result = rand(10)
  if (0..3).include?(result)
    poke = PokeBattle_Pokemon.new(:EEVEE, 20, $Trainer)
    pokeReward(poke, 3)
  elsif (4..7).include?(result)
    poke = PokeBattle_Pokemon.new(:SANDSHREW, 20, $Trainer)
    pokeReward(poke, 3)
  else
    poke = PokeBattle_Pokemon.new(:DRATINI, 20, $Trainer)
    pokeReward(poke, 3)
  end

#############################################
# Tier 4 con un 10%
#############################################
when (90...100)
  result = rand(10)
  if result >= 5  # Arreglado, ahora tiene posibilidad de cumplirse
    poke = PokeBattle_Pokemon.new(:PIKACHU, 20, $Trainer)
    poke.iv = [18, 15, 21, 2, 9, 30]
    poke.pbLearnMove(:CELEBRATE)
    poke.pbLearnMove(:SPARK)
    poke.pbLearnMove(:THUNDERSHOCK)
    poke.pbLearnMove(:QUICKATTACK)
    poke.setNature(:JOLLY)
    poke.setItem(:AMULETCOIN)
    poke.setAbility(0)
    poke.calcStats
    pokeReward(poke, 4)
  else
    poke = PokeBattle_Pokemon.new(:CLEFAIRY, 20, $Trainer)
    poke.iv = [16, 17, 14, 13, 10, 6]
    poke.pbLearnMove(:CELEBRATE)
    poke.pbLearnMove(:POUND)
    poke.pbLearnMove(:SWEETKISS)
    poke.pbLearnMove(:METRONOME)
    poke.setNature(:JOLLY)
    poke.setItem(:AMULETCOIN)
    poke.setAbility(0)
    poke.calcStats
    pokeReward(poke, 4)
  end
end 
