prob = rand(100)
case prob
#############################################
# COMÚN con un 45%
#############################################
when (0...45)  # 0 al 44
  result = rand(10)
  if result < 5
    itemReward(:POKEBALL) # Premio 1: Pokébola
  else
    itemReward(:SUPERPOTION) # Premio 2: Superpoción
  end

#############################################
# RARO con un 30%
#############################################
when (45...75)  # 45 al 74
  result = rand(10)
  if (5..7).include?(result)  # Comprobación dentro del rango 5-7
    poke = PokeBattle_Pokemon.new(:ABRA, 20, $Trainer)
    poke.ev[PBStats::SPATK] = 236
    poke.ev[PBStats::SPDEF] = 76
    poke.ev[PBStats::SPEED] = 196
    poke.pbLearnMove(:PSYCHIC)
    poke.pbLearnMove(:DAZZLINGGLEAM)
    poke.pbLearnMove(:PROTECT)
    poke.pbLearnMove(:COUNTER)
    poke.calcStats
    pokeReward(poke, 2) # Premio 2: Abra
  else
    pokes = [:PICHU, :DROWZEE, :EKANS] 
    result = pokes[rand(pokes.length)]
    pokeReward(PokeBattle_Pokemon.new(result, 20, $Trainer), 2) # Premio 2: Pichu, Drowzee o Ekans
  end

#############################################
# ÉPICO con un 15%
#############################################
when (75...90)  # 75 al 89
  result = rand(10)
  if (0..3).include?(result)  # Comprobación dentro del rango 0-3
    poke = PokeBattle_Pokemon.new(:EEVEE, 20, $Trainer)
    pokeReward(poke, 3) # Premio 3: Eevee
  elsif (4..7).include?(result)  # Comprobación dentro del rango 4-7
    poke = PokeBattle_Pokemon.new(:SANDSHREW, 20, $Trainer)
    pokeReward(poke, 3) # Premio 3: Sandshrew
  else
    poke = PokeBattle_Pokemon.new(:DRATINI, 20, $Trainer)
    pokeReward(poke, 3) # Premio 3: Dratini
  end

#############################################
# LEGENDARIO con un 10%
#############################################
when (90...97)  # 90 al 96
  result = rand(10)
  if result > 7  # Si el resultado es mayor que 7
    poke = PokeBattle_Pokemon.new(:JOLTEON, 20, $Trainer)
    poke.iv = [31, 31, 31, 31, 31, 31]
    poke.pbLearnMove(:BITE)
    poke.pbLearnMove(:HIDDENPOWER)
    poke.pbLearnMove(:THUNDERSHOCK)
    poke.calcStats
    pokeReward(poke, 4) # Premio 4: Jolteon
  else
    itemReward(:MAXETHER, 4) # Premio 4: Max Ether
  end

#############################################
# LEGENDARIO con un 3%
#############################################
when (97...100)  # 97 al 99
  result = rand(10)
  if (0..3).include?(result)  # Comprobación dentro del rango 0-3
    poke = PokeBattle_Pokemon.new(:KANGASKHAN, 20, $Trainer)
    poke.ev[PBStats::HP] = 212
    poke.ev[PBStats::ATTACK] = 252
    poke.ev[PBStats::SPEED] = 44
    poke.setItem(:LEFTOVERS)
    poke.setNature(:ADAMANT)
    poke.setAbility(0)
    poke.calcStats
    pokeReward(poke, 5) # Premio 5: Kangaskhan
  elsif (4..5).include?(result)  # Comprobación dentro del rango 4-5
    poke = PokeBattle_Pokemon.new(:GYARADOS, 20, $Trainer)
    poke.ev[PBStats::HP] = 68
    poke.ev[PBStats::ATTACK] = 252
    poke.ev[PBStats::SPEED] = 188
    poke.setItem(:LEFTOVERS)
    poke.setNature(:INTIMIDATE)
    poke.pbLearnMove(:DRAGONDANCE)
    poke.calcStats
    pokeReward(poke, 5) # Premio 5: Gyarados
  elsif (6..7).include?(result)  # Comprobación dentro del rango 6-7
    poke = PokeBattle_Pokemon.new(:ABRA, 20, $Trainer)
    poke.ev[PBStats::HP] = 252
    poke.ev[PBStats::DEFENSE] = 84
    poke.ev[PBStats::SPDEF] = 148
    poke.ev[PBStats::SPEED] = 24
    poke.setNature(:CAREFUL)
    poke.setAbility(0)
    poke.calcStats
    pokeReward(poke, 5) # Premio 5: Abra
  else
    itemReward(:MASTERBALL, 5) # Premio 5: Master Ball
  end
end
